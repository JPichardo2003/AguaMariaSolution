@page "/Consultar/Parametros";
@inject HttpClient httpClient
@inject NotificationService notificationService
@attribute [Authorize(Roles = "Administrador, Empleado")]
<div class="card-header row">
    <div class="row">
        
        <div class="col-md-6">
            <label>Filtrar por ID:</label>
            <InputNumber @bind-Value="Filtro" class="form-control"></InputNumber>
        </div>
        <div class="col-md-6">
            <label>Filtrar por Descripción:</label>
            <InputText @bind-Value="Descripción" class="form-control"></InputText>
        </div>
        <br />
        <br />
        <br />
        <div class="row">
        <button type="button" class="btn btn-outline-primary oi oi-magnifying-glass" @onclick="Buscar"></button>
        </div>
    </div>
</div>   

@if (Parametros is not null)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Parametro Id</th>
                    <th>Descripci&oacute;n</th>
                    <th>M&iacute;nimo</th>
                    <th>M&aacute;ximo</th>
                    <AuthorizeView Roles="Administrador" Context="Admin">
                        <Authorized>
                            <th></th>
                        </Authorized>
                    </AuthorizeView>
                </tr>
            </thead>
            <tbody>
                @foreach (var parametros in Parametros)
                {
                    <tr>
                        <td>@parametros.ParametroId</td>
                        <td>@parametros.Descripción</td>
                        <td>@parametros.Mínimo</td>
                        <td>@parametros.Máximo</td>
                        <AuthorizeView Roles="Administrador" Context="Admin">
                            <Authorized>
                                <td><a href="Registros/Parametros/@parametros.ParametroId">Ver</a></td>
                            </Authorized>
                        </AuthorizeView>
                    </tr>
                }
                <tr>
                    <td>Conteo: @Conteo</td>
                </tr>
            </tbody>
        </table>
    </div>
}


@code {

    public int Filtro { get; set; }
    public string Descripción { get; set; } = "";
    public List<Parametros>? Parametros { get; set; }
    public int Conteo { get; set; }
    bool PrimeraEntrada = true;



    protected override async Task OnInitializedAsync()
    {
        await Buscar();
        PrimeraEntrada = false;
    }

    public async Task Buscar()
    {
        Parametros = await httpClient.GetFromJsonAsync<List<Parametros>>($"api/Parametros");
        Conteo = Parametros != null ? Parametros!.Count() : 0;

        if (Conteo == 0)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No tiene registros guardados.",
                    Duration = 4000
                };
            notificationService.Notify(mensaje);
            return;
        }

        if (PrimeraEntrada)
        {
            return;
        }

        Parametros = Parametros.Where(p => (Filtro == 0 || p.ParametroId == Filtro) &&
                                     (string.IsNullOrEmpty(Descripción) || (p.Descripción != null && p.Descripción
                                                                                                        .ToLower()
                                                                                                        .Contains(Descripción.ToLower()))))
                                                                                                        .ToList();

        Conteo = Parametros != null ? Parametros!.Count() : 0;
        if (Conteo == 0)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "No se ha encontrado ningún registro",
                    Detail = "Revise los parámetros utilizados.",
                    Duration = 4000
                };
            notificationService.Notify(mensaje);
        }
        StateHasChanged();
    }

}
