@page "/ConsultaRecords";
@inject HttpClient httpClient
@attribute [Authorize]
@rendermode InteractiveAuto
<PageTitle>Consulta de Record de Lavadora de botellones de agua </PageTitle>
<div class="card">
    <div class="card-header d-flex align-items-center">
        <img src="AguaMariaLogo.png" class="img-logo" />
        <h1>Record de Lavadora de botellones de agua</h1>
    </div>
    <div class="card-body">
        <div class="input-group-text">

            <label class="form-control-label col-1">Desde:</label>
            <div class="col-3">
                <input class="form-control" type="date" @bind="Desde" />
            </div>

            <label class="form-control-label col-1">Hasta:</label>
            <div class="col-3">
                <input class="form-control" type="date" @bind="Hasta" />
            </div>

            <div class="col-5">
                <button type="button" @onclick="Buscar" class="btn btn-primary  ">
                    <i class="bi bi-search" />
                    <br /> Buscar
                </button>
            </div>

        </div>
        </div>
<div class="card-header row">
    <label>Filtrar ID:</label>
    <div class="col-md-6 input-group filter-input">
        <InputNumber @bind-Value="Filtro" class="form-control"></InputNumber>
        <div class="input-group-append">
            <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
        </div>
    </div>
</div>

@if (RecordLavadoraBotellones is not null)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Record ID</th>
                    <th>Fecha</th>
                    <th>Hora</th>
                    <th>Empleado</th>
                    <th>Temperatura</th>
                    <th>Detergente</th>
                    <th>Alcalinidad & Enjuague</th>
                    <th>Desinfectante y Concentraci&oacute;n</th>
                    <th>Acci&oacute;n Tomada</th>
                    <th>Ver</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var RecordLavadoraBotellones in RecordLavadoraBotellones)
                {
                    <tr>
                        <td>@RecordLavadoraBotellones.RecordId</td>
                        <td>@RecordLavadoraBotellones.Fecha.ToString("MM/dd/yyyy")</td>
                        <td>@RecordLavadoraBotellones.Fecha.ToString("hh:mm:ss")</td>
                        <td>@ObtenerNombre(RecordLavadoraBotellones.EmpleadoId)</td>
                        <td>@RecordLavadoraBotellones.Temperatura °F</td>
                        <td>@RecordLavadoraBotellones.Detergente %</td>
                        <td>@RecordLavadoraBotellones.AlcalinidadEnjuague</td>
                        <td>@RecordLavadoraBotellones.DesinfectanteConcentración mg/l</td>
                        <td>@RecordLavadoraBotellones.AcciónTomada</td>
                        <td><a href="RecordBotellones/@RecordLavadoraBotellones.RecordId"><i class="bi bi-eye"></i></a></td>
                    </tr>
                }
                <tr>
                    <td>Conteo: @Conteo</td>
                </tr>
            </tbody>
        </table>
    </div>
}
</div>

@code {

    public int Filtro { get; set; }
    public List<RecordLavadoraBotellones>? RecordLavadoraBotellones { get; set; }
    public RecordLavadoraBotellones? recordLavadoraBotellones { get; set; } = new RecordLavadoraBotellones();
    public int Conteo { get; set; }
    public List<Empleados> ListaEmpleados { get; set; } = new List<Empleados>();
    public DateTime Desde { get; set; }
    public DateTime Hasta { get; set; }


    protected override async Task OnInitializedAsync()
    {
         var empleados = await httpClient.GetFromJsonAsync<List<Empleados>>("api/Empleados");
        Desde = DateTime.Now.AddMonths(-1);
        Hasta = DateTime.Now;
         if (empleados is not null)
         {
             ListaEmpleados = empleados;
         }
         await Buscar();

     }

    public async Task Buscar()
    {
        if (Filtro == 0)
        {
            var listaRecords = await httpClient.GetFromJsonAsync<List<RecordLavadoraBotellones>>($"api/RecordLavadoraBotellones/");
            RecordLavadoraBotellones = listaRecords?.Where(c =>  c.Fecha >= Desde && c.Fecha <= Hasta).ToList();
        }
        else
        {
            var listaRecords = await httpClient.GetFromJsonAsync<List<RecordLavadoraBotellones>>($"api/RecordLavadoraBotellones/");
                    RecordLavadoraBotellones = listaRecords?.Where(c => c.RecordId == Filtro && c.Fecha >= Desde && c.Fecha <= Hasta).ToList();
        }
        Conteo = RecordLavadoraBotellones != null ? RecordLavadoraBotellones!.Count() : 0;
        StateHasChanged();
    }

    public string ObtenerNombre(int Id)
    {
        var empleado = ListaEmpleados.FirstOrDefault(p => p.EmpleadoId == Id);
        return empleado?.Nombre ?? "Nombre no encontrado";
    }

}
