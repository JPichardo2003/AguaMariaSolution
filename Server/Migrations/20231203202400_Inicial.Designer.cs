// <auto-generated />
using System;
using AguaMariaSolution.Server.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AguaMariaSolution.Server.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231203202400_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Admins", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Apellido = "El Hage Jreij",
                            Contraseña = "Cl@ve123",
                            Email = "abrahamehj@ams.com",
                            Nombre = "Abraham"
                        },
                        new
                        {
                            AdminId = 2,
                            Apellido = "Pichardo Barranco",
                            Contraseña = "Cl@ve123",
                            Email = "juliocpb@ams.com",
                            Nombre = "Julio Cesar"
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadAgua", b =>
                {
                    b.Property<int>("ControlCalidadAguaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AcciónTomada")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntidadMuestreoAguaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("TandaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ControlCalidadAguaId");

                    b.ToTable("ControlCalidadAgua");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadAguaDetalle", b =>
                {
                    b.Property<int>("ControlCalidadAguaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ControlCalidadAguaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParametroId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pasó")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("ControlCalidadAguaDetalleId");

                    b.HasIndex("ControlCalidadAguaId");

                    b.ToTable("ControlCalidadAguaDetalle");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadProductoTerminado", b =>
                {
                    b.Property<int>("ProductoTerminadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AcciónTomada")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoTerminadoId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ControlCalidadProductoTerminado");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Empleados", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            EmpleadoId = 1,
                            Apellido = "Almonte",
                            Celular = "0123456789",
                            Clave = "Cl@ve123",
                            Dirección = "Su casa",
                            Email = "elmontee@ams.com",
                            Nombre = "Enel",
                            Teléfono = "0123456789"
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.EntidadesMuestreoAguas", b =>
                {
                    b.Property<int>("EntidadesMuestreoAguaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EntidadesMuestreoAguaId");

                    b.ToTable("EntidadesMuestreoAguas");

                    b.HasData(
                        new
                        {
                            EntidadesMuestreoAguaId = 1,
                            Descripción = "Cisterna 1"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 2,
                            Descripción = "Cisterna 2"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 3,
                            Descripción = "Cisterna 3"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 4,
                            Descripción = "INAPA"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 5,
                            Descripción = "Filtro Carbón Activado"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 6,
                            Descripción = "Ablandadores"
                        },
                        new
                        {
                            EntidadesMuestreoAguaId = 7,
                            Descripción = "Ósmosis"
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Parametros", b =>
                {
                    b.Property<int>("ParametroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Máximo")
                        .HasColumnType("REAL");

                    b.Property<float>("Mínimo")
                        .HasColumnType("REAL");

                    b.HasKey("ParametroId");

                    b.ToTable("Parametros");

                    b.HasData(
                        new
                        {
                            ParametroId = 1,
                            Descripción = "Cloruro",
                            Máximo = 250f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 2,
                            Descripción = "Cloro Residual",
                            Máximo = 0f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 3,
                            Descripción = "STD",
                            Máximo = 500f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 4,
                            Descripción = "Conductancia",
                            Máximo = 700f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 5,
                            Descripción = "Dureza",
                            Máximo = 500f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 6,
                            Descripción = "PH",
                            Máximo = 8.5f,
                            Mínimo = 6.5f
                        },
                        new
                        {
                            ParametroId = 7,
                            Descripción = "Sulfato",
                            Máximo = 250f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 8,
                            Descripción = "Nitrato",
                            Máximo = 10f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 9,
                            Descripción = "Hierro",
                            Máximo = 0.3f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 10,
                            Descripción = "Color",
                            Máximo = 5f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 11,
                            Descripción = "Turbidez",
                            Máximo = 0.5f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 12,
                            Descripción = "Sabor",
                            Máximo = 1f,
                            Mínimo = 1f
                        },
                        new
                        {
                            ParametroId = 13,
                            Descripción = "Ozono",
                            Máximo = 0.1f,
                            Mínimo = 0.05f
                        },
                        new
                        {
                            ParametroId = 14,
                            Descripción = "Lamp UV",
                            Máximo = 1f,
                            Mínimo = 1f
                        },
                        new
                        {
                            ParametroId = 120,
                            Descripción = "Cloro Residual",
                            Máximo = 1.5f,
                            Mínimo = 1f
                        },
                        new
                        {
                            ParametroId = 121,
                            Descripción = "Dureza",
                            Máximo = 500f,
                            Mínimo = 68.4f
                        },
                        new
                        {
                            ParametroId = 122,
                            Descripción = "STD",
                            Máximo = 1000f,
                            Mínimo = 70f
                        },
                        new
                        {
                            ParametroId = 123,
                            Descripción = "Color",
                            Máximo = 15f,
                            Mínimo = 5f
                        },
                        new
                        {
                            ParametroId = 124,
                            Descripción = "Turbidez",
                            Máximo = 25f,
                            Mínimo = 10f
                        },
                        new
                        {
                            ParametroId = 125,
                            Descripción = "Sulfato",
                            Máximo = 400f,
                            Mínimo = 250f
                        },
                        new
                        {
                            ParametroId = 126,
                            Descripción = "Nitrato",
                            Máximo = 50f,
                            Mínimo = 10f
                        },
                        new
                        {
                            ParametroId = 130,
                            Descripción = "Cloro Residual",
                            Máximo = 0.05f,
                            Mínimo = 0f
                        },
                        new
                        {
                            ParametroId = 133,
                            Descripción = "Olor",
                            Máximo = 1f,
                            Mínimo = 1f
                        },
                        new
                        {
                            ParametroId = 151,
                            Descripción = "STD",
                            Máximo = 500f,
                            Mínimo = 2f
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ParametrosEntidadesMuestreoAguas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntidadesMuestreoAguaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntidadesMuestreoAguasEntidadesMuestreoAguaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParametroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EntidadesMuestreoAguasEntidadesMuestreoAguaId");

                    b.ToTable("ParametrosEntidadesMuestreoAguas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 120
                        },
                        new
                        {
                            Id = 2,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 121
                        },
                        new
                        {
                            Id = 3,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 122
                        },
                        new
                        {
                            Id = 4,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 123
                        },
                        new
                        {
                            Id = 5,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 124
                        },
                        new
                        {
                            Id = 6,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 125
                        },
                        new
                        {
                            Id = 7,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 126
                        },
                        new
                        {
                            Id = 8,
                            EntidadesMuestreoAguaId = 1,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 9,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 120
                        },
                        new
                        {
                            Id = 10,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 121
                        },
                        new
                        {
                            Id = 11,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 122
                        },
                        new
                        {
                            Id = 12,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 123
                        },
                        new
                        {
                            Id = 13,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 124
                        },
                        new
                        {
                            Id = 14,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 125
                        },
                        new
                        {
                            Id = 15,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 126
                        },
                        new
                        {
                            Id = 16,
                            EntidadesMuestreoAguaId = 2,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 17,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 120
                        },
                        new
                        {
                            Id = 18,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 121
                        },
                        new
                        {
                            Id = 19,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 122
                        },
                        new
                        {
                            Id = 20,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 123
                        },
                        new
                        {
                            Id = 21,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 124
                        },
                        new
                        {
                            Id = 22,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 125
                        },
                        new
                        {
                            Id = 23,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 126
                        },
                        new
                        {
                            Id = 24,
                            EntidadesMuestreoAguaId = 3,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 25,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 120
                        },
                        new
                        {
                            Id = 26,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 121
                        },
                        new
                        {
                            Id = 27,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 122
                        },
                        new
                        {
                            Id = 29,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 123
                        },
                        new
                        {
                            Id = 30,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 124
                        },
                        new
                        {
                            Id = 31,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 125
                        },
                        new
                        {
                            Id = 32,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 126
                        },
                        new
                        {
                            Id = 33,
                            EntidadesMuestreoAguaId = 4,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 34,
                            EntidadesMuestreoAguaId = 5,
                            ParametroId = 130
                        },
                        new
                        {
                            Id = 35,
                            EntidadesMuestreoAguaId = 5,
                            ParametroId = 123
                        },
                        new
                        {
                            Id = 36,
                            EntidadesMuestreoAguaId = 5,
                            ParametroId = 124
                        },
                        new
                        {
                            Id = 37,
                            EntidadesMuestreoAguaId = 5,
                            ParametroId = 133
                        },
                        new
                        {
                            Id = 38,
                            EntidadesMuestreoAguaId = 6,
                            ParametroId = 5
                        },
                        new
                        {
                            Id = 39,
                            EntidadesMuestreoAguaId = 6,
                            ParametroId = 122
                        },
                        new
                        {
                            Id = 40,
                            EntidadesMuestreoAguaId = 6,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 41,
                            EntidadesMuestreoAguaId = 7,
                            ParametroId = 6
                        },
                        new
                        {
                            Id = 42,
                            EntidadesMuestreoAguaId = 7,
                            ParametroId = 151
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ProductoTerminadosDetalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParametroId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pasó")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoTerminadoId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("DetalleId");

                    b.HasIndex("ProductoTerminadoId");

                    b.ToTable("ProductoTerminadosDetalle");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Referencias", b =>
                {
                    b.Property<int>("ReferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParametroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReferenciaId");

                    b.ToTable("Referencias");

                    b.HasData(
                        new
                        {
                            ReferenciaId = 1,
                            Descripción = "mg/L",
                            ParametroId = 1
                        },
                        new
                        {
                            ReferenciaId = 2,
                            Descripción = "mg/L",
                            ParametroId = 2
                        },
                        new
                        {
                            ReferenciaId = 3,
                            Descripción = "mg/L",
                            ParametroId = 3
                        },
                        new
                        {
                            ReferenciaId = 4,
                            Descripción = "CaCo3",
                            ParametroId = 5
                        },
                        new
                        {
                            ReferenciaId = 5,
                            Descripción = "mg/L",
                            ParametroId = 7
                        },
                        new
                        {
                            ReferenciaId = 6,
                            Descripción = "mg/L",
                            ParametroId = 8
                        },
                        new
                        {
                            ReferenciaId = 7,
                            Descripción = "mg/L",
                            ParametroId = 9
                        },
                        new
                        {
                            ReferenciaId = 8,
                            Descripción = "UNID",
                            ParametroId = 10
                        },
                        new
                        {
                            ReferenciaId = 9,
                            Descripción = "NTU",
                            ParametroId = 11
                        },
                        new
                        {
                            ReferenciaId = 10,
                            Descripción = "(1) Insipido y (0) Sapido",
                            ParametroId = 12
                        },
                        new
                        {
                            ReferenciaId = 11,
                            Descripción = "mg/L",
                            ParametroId = 13
                        },
                        new
                        {
                            ReferenciaId = 12,
                            Descripción = "(1) Sí y (0) no",
                            ParametroId = 14
                        },
                        new
                        {
                            ReferenciaId = 13,
                            Descripción = "mg/L",
                            ParametroId = 120
                        },
                        new
                        {
                            ReferenciaId = 14,
                            Descripción = "CaCo3",
                            ParametroId = 121
                        },
                        new
                        {
                            ReferenciaId = 15,
                            Descripción = "mg/L",
                            ParametroId = 122
                        },
                        new
                        {
                            ReferenciaId = 16,
                            Descripción = "U. Pt-Co",
                            ParametroId = 123
                        },
                        new
                        {
                            ReferenciaId = 17,
                            Descripción = "FTU",
                            ParametroId = 124
                        },
                        new
                        {
                            ReferenciaId = 18,
                            Descripción = "mg/L",
                            ParametroId = 125
                        },
                        new
                        {
                            ReferenciaId = 19,
                            Descripción = "mg/L",
                            ParametroId = 126
                        },
                        new
                        {
                            ReferenciaId = 20,
                            Descripción = "mg/L",
                            ParametroId = 130
                        },
                        new
                        {
                            ReferenciaId = 21,
                            Descripción = "(1) Inodoro y (0) Odoro",
                            ParametroId = 133
                        },
                        new
                        {
                            ReferenciaId = 22,
                            Descripción = "mg/L",
                            ParametroId = 151
                        });
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Reviews", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaDeBotellon")
                        .HasColumnType("TEXT");

                    b.Property<int>("Valoración")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReviewId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadAguaDetalle", b =>
                {
                    b.HasOne("AguaMariaSolution.Shared.Models.ControlCalidadAgua", null)
                        .WithMany("ControlCalidadAguaDetalle")
                        .HasForeignKey("ControlCalidadAguaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadProductoTerminado", b =>
                {
                    b.HasOne("AguaMariaSolution.Shared.Models.Empleados", null)
                        .WithMany("ControlCalidadProductoTerminado")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ParametrosEntidadesMuestreoAguas", b =>
                {
                    b.HasOne("AguaMariaSolution.Shared.Models.EntidadesMuestreoAguas", null)
                        .WithMany("ListaParametros")
                        .HasForeignKey("EntidadesMuestreoAguasEntidadesMuestreoAguaId");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ProductoTerminadosDetalle", b =>
                {
                    b.HasOne("AguaMariaSolution.Shared.Models.ControlCalidadProductoTerminado", null)
                        .WithMany("ProductoTerminadosDetalle")
                        .HasForeignKey("ProductoTerminadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Reviews", b =>
                {
                    b.HasOne("AguaMariaSolution.Shared.Models.Clientes", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Clientes", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadAgua", b =>
                {
                    b.Navigation("ControlCalidadAguaDetalle");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.ControlCalidadProductoTerminado", b =>
                {
                    b.Navigation("ProductoTerminadosDetalle");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.Empleados", b =>
                {
                    b.Navigation("ControlCalidadProductoTerminado");
                });

            modelBuilder.Entity("AguaMariaSolution.Shared.Models.EntidadesMuestreoAguas", b =>
                {
                    b.Navigation("ListaParametros");
                });
#pragma warning restore 612, 618
        }
    }
}
